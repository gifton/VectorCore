Building for production...
[0/4] Write sources
[1/4] Write swift-version--58304C5D6DBC2206.txt
error: compile command failed due to signal 6 (use -v to see invocation)
/Users/goftin/dev/gsuite/VSK/VectorCore/.build/arm64-apple-macosx/release/Modules/VectorCore.swiftmodule:1:1: error: reference to top-level declaration 'posix_memalign' broken by a context change; the declaration kind of 'posix_memalign'  changed since building 'VectorCore', it was in '_stdlib' and now a candidate is found only in 'Darwin'
1 | _stdlib.posix_memalign
  | |- error: reference to top-level declaration 'posix_memalign' broken by a context change; the declaration kind of 'posix_memalign'  changed since building 'VectorCore', it was in '_stdlib' and now a candidate is found only in 'Darwin'
  | |- note: the declaration was expected to be found in module '_stdlib' at '/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.4.sdk/usr/include/c_standard_library.modulemap'
  | |- note: the declaration was actually found in module 'Darwin' at '/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.4.sdk/usr/lib/swift/Darwin.swiftmodule/arm64e-apple-macos.swiftinterface'
  | |- note: a candidate was filtered out because of a type mismatch; expected: '(Optional<UnsafeMutablePointer<Optional<UnsafeMutableRawPointer>>>, Int, Int) -> Int32', found: '(UnsafeMutablePointer<UnsafeMutableRawPointer?>, Int, Int) -> Int32'
  | `- note: declarations in the clang module '_stdlib' may be hidden by clang preprocessor macros
Please submit a bug report (https://swift.org/contributing/#reporting-bugs) and include the crash backtrace.
Stack dump:
0.	Program arguments: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c /Users/goftin/dev/gsuite/VSK/VectorCore/Benchmarks/VectorCoreBenchmarks/BatchOperationBenchmarks.swift /Users/goftin/dev/gsuite/VSK/VectorCore/Benchmarks/VectorCoreBenchmarks/DistanceBenchmarks.swift /Users/goftin/dev/gsuite/VSK/VectorCore/Benchmarks/VectorCoreBenchmarks/StorageBenchmarks.swift /Users/goftin/dev/gsuite/VSK/VectorCore/Benchmarks/VectorCoreBenchmarks/VectorOperationBenchmarks.swift /Users/goftin/dev/gsuite/VSK/VectorCore/Benchmarks/main.swift -supplementary-output-file-map /var/folders/pt/vfzd1q1551l356_mc6yw564m0000gn/T/TemporaryDirectory.UuTSYA/supplementaryOutputs-1 -target arm64-apple-macosx14.0 -Xllvm -aarch64-use-tbi -enable-objc-interop -stack-check -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.4.sdk -I /Users/goftin/dev/gsuite/VSK/VectorCore/.build/arm64-apple-macosx/release/Modules -I /opt/homebrew/Cellar/jemalloc/5.3.0/include -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -g -debug-info-format=dwarf -dwarf-version=4 -module-cache-path /Users/goftin/dev/gsuite/VSK/VectorCore/.build/arm64-apple-macosx/release/ModuleCache -warnings-as-errors -swift-version 6 -enforce-exclusivity=unchecked -O -D SWIFT_PACKAGE -D SWIFT_RELEASE_MODE -D VECTORCORE_ENABLE_SIMD -new-driver-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-driver -entry-point-function-name VectorCoreBenchmarks_main -enable-experimental-feature StrictConcurrency -enable-upcoming-feature ExistentialAny -empty-abi-descriptor -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -file-compilation-dir /Users/goftin/dev/gsuite/VSK/VectorCore -Xcc -fmodule-map-file=/Users/goftin/dev/gsuite/VSK/VectorCore/.build/checkouts/package-jemalloc/Sources/jemalloc/module.modulemap -Xcc -fmodule-map-file=/Users/goftin/dev/gsuite/VSK/VectorCore/.build/checkouts/swift-atomics/Sources/_AtomicsShims/include/module.modulemap -Xcc -I -Xcc /Users/goftin/dev/gsuite/VSK/VectorCore/.build/checkouts/swift-atomics/Sources/_AtomicsShims/include -Xcc -fmodule-map-file=/Users/goftin/dev/gsuite/VSK/VectorCore/.build/checkouts/swift-system/Sources/CSystem/include/module.modulemap -Xcc -I -Xcc /Users/goftin/dev/gsuite/VSK/VectorCore/.build/checkouts/swift-system/Sources/CSystem/include -Xcc -fmodule-map-file=/Users/goftin/dev/gsuite/VSK/VectorCore/.build/checkouts/swift-numerics/Sources/_NumericsShims/include/module.modulemap -Xcc -I -Xcc /Users/goftin/dev/gsuite/VSK/VectorCore/.build/checkouts/swift-numerics/Sources/_NumericsShims/include -Xcc -fmodule-map-file=/Users/goftin/dev/gsuite/VSK/VectorCore/.build/arm64-apple-macosx/release/SwiftRuntimeHooks.build/module.modulemap -Xcc -I -Xcc /Users/goftin/dev/gsuite/VSK/VectorCore/.build/checkouts/package-benchmark/Sources/SwiftRuntimeHooks/include -Xcc -fmodule-map-file=/Users/goftin/dev/gsuite/VSK/VectorCore/.build/arm64-apple-macosx/release/CDarwinOperatingSystemStats.build/module.modulemap -Xcc -I -Xcc /Users/goftin/dev/gsuite/VSK/VectorCore/.build/checkouts/package-benchmark/Platform/CDarwinOperatingSystemStats/include -Xcc -isysroot -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.4.sdk -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -Xcc -F -Xcc /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/PrivateFrameworks -Xcc -fPIC -Xcc -g -module-name VectorCoreBenchmarks -package-name vectorcore -disable-clang-spi -target-sdk-version 15.4 -target-sdk-name macosx15.4 -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -in-process-plugin-server-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/libSwiftInProcPluginServer.dylib -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -parse-as-library -num-threads 8 -o /Users/goftin/dev/gsuite/VSK/VectorCore/.build/arm64-apple-macosx/release/VectorCoreBenchmarks.build/BatchOperationBenchmarks.swift.o -o /Users/goftin/dev/gsuite/VSK/VectorCore/.build/arm64-apple-macosx/release/VectorCoreBenchmarks.build/DistanceBenchmarks.swift.o -o /Users/goftin/dev/gsuite/VSK/VectorCore/.build/arm64-apple-macosx/release/VectorCoreBenchmarks.build/StorageBenchmarks.swift.o -o /Users/goftin/dev/gsuite/VSK/VectorCore/.build/arm64-apple-macosx/release/VectorCoreBenchmarks.build/VectorOperationBenchmarks.swift.o -o /Users/goftin/dev/gsuite/VSK/VectorCore/.build/arm64-apple-macosx/release/VectorCoreBenchmarks.build/main.swift.o -cross-module-optimization
1.	Apple Swift version 6.1 (swiftlang-6.1.0.110.21 clang-1700.0.13.3)
2.	Compiling with the current language version
3.	While evaluating request ExecuteSILPipelineRequest(Run pipelines { PrepareOptimizationPasses, EarlyModulePasses, HighLevel,Function+EarlyLoopOpt, HighLevel,Module+StackPromote, MidLevel,Function, ClosureSpecialize, LowLevel,Function, LateLoopOpt, SIL Debug Info Generator } on SIL for VectorCoreBenchmarks)
4.	While running pass #936 SILModuleTransform "PerformanceSILLinker".
5.	While deserializing SIL function "$s10VectorCore13AlignedMemoryO08allocateC04type5count9alignmentSpyxGxm_S2itlFZSf_Ttt2gq5"
6.	While deserializing SIL function "posix_memalign"
7.	*** DESERIALIZATION FAILURE ***
*** If any module named here was modified in the SDK, please delete the ***
*** new swiftmodule files from the SDK and keep only swiftinterfaces.   ***
module 'VectorCore', builder version '6.1(6.1)/Apple Swift version 6.1 (swiftlang-6.1.0.110.21 clang-1700.0.13.3)', built from source against SDK 24E241, non-resilient, loaded from '/Users/goftin/dev/gsuite/VSK/VectorCore/.build/arm64-apple-macosx/release/Modules/VectorCore.swiftmodule'

Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  swift-frontend           0x000000010b452c28 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56
1  swift-frontend           0x000000010b450a60 llvm::sys::RunSignalHandlers() + 112
2  swift-frontend           0x000000010b453264 SignalHandler(int) + 360
3  libsystem_platform.dylib 0x000000018abf7624 _sigtramp + 56
4  libsystem_pthread.dylib  0x000000018abbd88c pthread_kill + 296
5  libsystem_c.dylib        0x000000018aac6c60 abort + 124
6  swift-frontend           0x0000000105a5dcf8 swift::ModuleFileSharedCore::fatal(llvm::Error) const + 284
7  swift-frontend           0x00000001059f1354 swift::ModuleFile::diagnoseFatal(llvm::Error) const + 0
8  swift-frontend           0x00000001059f7730 swift::ModuleFile::getModule(llvm::PointerEmbeddedInt<unsigned int, 31>) + 0
9  swift-frontend           0x0000000105a34644 swift::SILDeserializer::readSILFunctionChecked(llvm::PointerEmbeddedInt<unsigned int, 31>, swift::SILFunction*, llvm::StringRef, bool, bool, bool) + 1920
10 swift-frontend           0x0000000105a338c4 swift::SILDeserializer::getFuncForReference(llvm::StringRef, swift::SILType, swift::TypeExpansionContext) + 484
11 swift-frontend           0x0000000105a41ed8 swift::SILDeserializer::readSILInstruction(swift::SILFunction*, swift::SILBuilder&, unsigned int, llvm::SmallVectorImpl<unsigned long long>&) + 42860
12 swift-frontend           0x0000000105a3535c swift::SILDeserializer::readSILFunctionChecked(llvm::PointerEmbeddedInt<unsigned int, 31>, swift::SILFunction*, llvm::StringRef, bool, bool, bool) + 5272
13 swift-frontend           0x0000000105a48730 swift::SILDeserializer::lookupSILFunction(swift::SILFunction*, bool) + 456
14 swift-frontend           0x0000000105b11164 swift::SILLinkerVisitor::deserializeAndPushToWorklist(swift::SILFunction*) + 100
15 swift-frontend           0x0000000105b117e4 swift::SILLinkerVisitor::process() + 372
16 swift-frontend           0x0000000105b115fc swift::SILLinkerVisitor::processFunction(swift::SILFunction*) + 152
17 swift-frontend           0x000000010627d6b4 (anonymous namespace)::SILLinker::run() + 192
18 swift-frontend           0x00000001061401f0 swift::SILPassManager::executePassPipelinePlan(swift::SILPassPipelinePlan const&) + 13536
19 swift-frontend           0x000000010617ac50 swift::SimpleRequest<swift::ExecuteSILPipelineRequest, std::__1::tuple<> (swift::SILPipelineExecutionDescriptor), (swift::RequestFlags)1>::evaluateRequest(swift::ExecuteSILPipelineRequest const&, swift::Evaluator&) + 52
20 swift-frontend           0x000000010615e6e0 swift::ExecuteSILPipelineRequest::OutputType swift::Evaluator::getResultUncached<swift::ExecuteSILPipelineRequest, swift::ExecuteSILPipelineRequest::OutputType swift::evaluateOrFatal<swift::ExecuteSILPipelineRequest>(swift::Evaluator&, swift::ExecuteSILPipelineRequest)::'lambda'()>(swift::ExecuteSILPipelineRequest const&, swift::ExecuteSILPipelineRequest::OutputType swift::evaluateOrFatal<swift::ExecuteSILPipelineRequest>(swift::Evaluator&, swift::ExecuteSILPipelineRequest)::'lambda'()) + 412
21 swift-frontend           0x0000000106161f30 swift::runSILOptimizationPasses(swift::SILModule&) + 448
22 swift-frontend           0x0000000105664858 swift::CompilerInstance::performSILProcessing(swift::SILModule*) + 1148
23 swift-frontend           0x00000001052a4d90 performCompileStepsPostSILGen(swift::CompilerInstance&, std::__1::unique_ptr<swift::SILModule, std::__1::default_delete<swift::SILModule>>, llvm::PointerUnion<swift::ModuleDecl*, swift::SourceFile*>, swift::PrimarySpecificPaths const&, int&, swift::FrontendObserver*) + 1360
24 swift-frontend           0x00000001052a471c swift::performCompileStepsPostSema(swift::CompilerInstance&, int&, swift::FrontendObserver*) + 2688
25 swift-frontend           0x00000001052a7654 performCompile(swift::CompilerInstance&, int&, swift::FrontendObserver*) + 1764
26 swift-frontend           0x00000001052a5fd8 swift::performFrontend(llvm::ArrayRef<char const*>, char const*, void*, swift::FrontendObserver*) + 3716
27 swift-frontend           0x000000010522a0bc swift::mainEntry(int, char const**) + 5428
28 dyld                     0x000000018a81eb4c start + 6000
