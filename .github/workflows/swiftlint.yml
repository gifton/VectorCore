name: SwiftLint

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**.swift'
      - '.swiftlint.yml'
      - '.github/workflows/swiftlint.yml'
  pull_request:
    paths:
      - '**.swift'
      - '.swiftlint.yml'
      - '.github/workflows/swiftlint.yml'

jobs:
  swiftlint:
    name: Run SwiftLint
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install SwiftLint
      run: brew install swiftlint

    - name: Run SwiftLint
      run: |
        echo "Running SwiftLint..."
        swiftlint --reporter github-actions-logging

    - name: Generate SwiftLint Report
      if: always()
      run: |
        echo "## SwiftLint Report" > swiftlint-report.md
        echo "" >> swiftlint-report.md

        # Count violations
        WARNINGS=$(swiftlint --quiet 2>/dev/null | grep -c "warning:" || true)
        ERRORS=$(swiftlint --quiet 2>/dev/null | grep -c "error:" || true)

        echo "- **Warnings:** $WARNINGS" >> swiftlint-report.md
        echo "- **Errors:** $ERRORS" >> swiftlint-report.md
        echo "" >> swiftlint-report.md

        if [ "$ERRORS" -gt 0 ]; then
          echo "### ❌ Errors Found" >> swiftlint-report.md
          echo "" >> swiftlint-report.md
          echo '```' >> swiftlint-report.md
          swiftlint --quiet 2>/dev/null | grep "error:" | head -20 >> swiftlint-report.md
          echo '```' >> swiftlint-report.md
        fi

        if [ "$WARNINGS" -gt 0 ]; then
          echo "### ⚠️ Warnings Found" >> swiftlint-report.md
          echo "" >> swiftlint-report.md
          echo '```' >> swiftlint-report.md
          swiftlint --quiet 2>/dev/null | grep "warning:" | head -20 >> swiftlint-report.md
          echo '```' >> swiftlint-report.md
        fi

        if [ "$ERRORS" -eq 0 ] && [ "$WARNINGS" -eq 0 ]; then
          echo "### ✅ No issues found!" >> swiftlint-report.md
        fi

    - name: Upload SwiftLint Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: swiftlint-report
        path: swiftlint-report.md

    - name: Comment PR with SwiftLint Results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('swiftlint-report.md', 'utf8');

          // Try to find and update existing comment
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });

          const botComment = comments.find(comment =>
            comment.user.type === 'Bot' &&
            comment.body.includes('## SwiftLint Report')
          );

          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: report
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: report
            });
          }

    - name: Fail on Errors
      run: |
        ERRORS=$(swiftlint --quiet 2>/dev/null | grep -c "error:" || true)
        if [ "$ERRORS" -gt 0 ]; then
          echo "❌ SwiftLint found $ERRORS error(s)"
          exit 1
        else
          WARNINGS=$(swiftlint --quiet 2>/dev/null | grep -c "warning:" || true)
          echo "✅ SwiftLint passed with $WARNINGS warning(s)"
        fi